{"version":3,"sources":["components/Uploader/Uploader.js","components/GIFContainer/GIFContainer.js","components/VideoContainer/VideoContainer.js","routes.js","serviceWorker.js","index.js","App.js"],"names":["Uploader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onMediaChange","e","file","target","files","setState","reader","FileReader","onload","defineFile","readAsDataURL","state","content","result","react_default","a","createElement","className","type","onChange","indexOf","VideoContainer_VideoContainer_VideoContainer","GIFContainer_GIFContainer_GIFContainer","Component","GIFContainer","src","VideoContainer","onChangeRange","trimValues","loopVideo","video","currentTime","play","getCroppedVideoDuration","Math","abs","toFixed","_this2","setTimeout","duration","loopInterval","setInterval","clearInterval","_this3","ref","lib","values","step","min","max","renderTrack","Track","bind","renderThumb","Thumb","_ref","isDragged","assign","style","objectSpread","height","width","borderRadius","backgroundColor","display","justifyContent","alignItems","boxShadow","_ref2","children","onMouseDown","onTouchStart","background","getTrackBackground","colors","alignSelf","routes","react_router","path","component","from","to","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f18d29c.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { GIFContainer, VideoContainer } from '../';\nimport './Uploader.scss';\n\nexport default class Uploader extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: null,\n    }\n  }\n\n  onMediaChange = (e) => {\n    const { target } = e;\n    const file = target.files[0];\n\n    this.setState({ file }, () => {\n      const reader = new FileReader();\n  \n      reader.onload = this.defineFile;\n      reader.readAsDataURL(file);\n    })\n  }\n\n  defineFile = (e) => {\n    let { file } = this.state;\n    file.content = e.target.result;\n\n    this.setState({ file });\n  }\n\n  render() {\n    const { file } = this.state;\n\n    return (\n      <div className='uploader'>\n        <input type='file' onChange={this.onMediaChange} />\n        \n        {\n          file && file.content ?\n            (\n              file.type.indexOf('video') !== -1 ? \n                <VideoContainer file={file} /> : <GIFContainer file={file} />\n            ) : null\n        }\n\n        </div>\n    )\n  }\n}\n","\nimport React, { Component } from 'react'\n\nimport './GIFContainer.scss';\n\nexport default class GIFContainer extends Component {\n\n  render() {\n    return (\n      <div className='gif-container'>\n        <img src={this.props.file.content} />\n      </div>\n    )\n  }\n}\n","\nimport React, { Component } from 'react'\n\nimport { Range, getTrackBackground } from 'react-range';\n\nimport './VideoContainer.scss';\n\nexport default class VideoContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      trimValues: [0, 0],\n    }\n  }\n\n  componentDidMount() {\n\n    // Better a tiny workaround than not finishing\n    setTimeout(() => {\n      this.setState({\n        trimValues: [0, this.video.duration]\n      });\n  \n      this.video.play();\n      this.loopInterval = setInterval(this.loopVideo, 30);\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.loopInterval);\n  }\n\n  onChangeRange = (trimValues) => {\n    this.setState({ trimValues });\n  } \n   \n  loopVideo = () => {\n    if (this.video.currentTime >= this.state.trimValues[1]) {\n      this.video.currentTime = this.state.trimValues[0];\n      this.video.play();\n    }\n  };\n\n  getCroppedVideoDuration = () => {\n    return Math.abs(this.state.trimValues[1] - this.state.trimValues[0]).toFixed(2) + 's';\n  }\n\n  render() {\n    const { trimValues } = this.state;\n\n    return (\n      <div className='video-container'>\n        <video ref={video => this.video = video}\n          src={this.props.file.content}\n        />\n\n        {\n          this.video ? \n            <div>\n              <Range values={trimValues} step={0.01} min={0}\n                max={this.video.duration} onChange={this.onChangeRange}\n                renderTrack={Track.bind(this, trimValues, this.video.duration)} renderThumb={Thumb}\n              />\n              \n              <p className='duration'>CROPPED VIDEO DURATION: {this.getCroppedVideoDuration()}</p>\n            </div> : null\n        }\n\n      </div>\n    )\n  }\n}\n\n\nconst Thumb = ({ props, isDragged }) => (\n  <div\n    {...props}\n    style={{\n      ...props.style,\n      height: '30px',\n      width: '30px',\n      borderRadius: '100%',\n      backgroundColor: '#FFF',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      boxShadow: '0px 2px 6px #AAA'\n    }}\n  >\n    <div\n      style={{\n        height: '10px',\n        width: '10px',\n        borderRadius: '100%',\n        backgroundColor: isDragged ? '#548BF4' : '#CCC'\n      }}\n    />\n  </div>\n)\n\nconst Track = (trimValues, max, { props, children }) => (\n  <div\n    className='track'\n    onMouseDown={props.onMouseDown}\n    onTouchStart={props.onTouchStart}\n    style={{\n      ...props.style\n    }}\n  >\n    <div\n      ref={props.ref}\n      style={{\n        height: '5px',\n        width: '100%',\n        borderRadius: '4px',\n        background: getTrackBackground({\n          values: trimValues,\n          colors: ['#ccc', '#548BF4', '#ccc'],\n          min: 0,\n          max: max\n        }),\n        alignSelf: 'center'\n      }}\n    >\n      {children}\n    </div>\n  </div>\n)","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\nimport { Uploader } from './components';\n\nexport default () => (\n\t<Switch>\n\t\t<Route path='/' component={Uploader} />\n\t\t<Redirect from='*' to='/' />\n\t</Switch>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nimport { BrowserRouter } from 'react-router-dom'\nimport Routes from './routes.js';\n\nexport default () => (\n  <BrowserRouter>\n    <div className='app'>\n      <Routes />\n    </div>\n  </BrowserRouter>\n)\n"],"sourceRoot":""}